#include <iostream>
#include <algorithm>
using namespace std;
int n, m, ans;
char maze[10][10];
bool vis[10][10];
int dx[4] = { 1, -1, 0, 0 };
int dy[4] = { 0, 0, 1, -1 };
void dfs(int x, int y)
{
	if (x == n && y == m)
	{
		ans++;
		return;
	}
	for (int i = 0; i < 4; i++)
	{
		int tx = x + dx[i];
		int ty = y + dy[i];
		if (tx<1 || tx>n || ty<1 || ty>m || maze[tx][ty] == '#' || vis[tx][ty])
		{
			continue;
		}
		vis[tx][ty] = true;
		dfs(tx, ty);
		vis[tx][ty] = false;
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= m; j++)
		{
			cin >> maze[i][j];
		}
	}
	vis[1][1] = true;
	dfs(1, 1);
	cout << ans << endl;
	return 0;
}